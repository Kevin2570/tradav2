import { prisma } from '../../../lib/prisma';
const Body=z.object({email:z.string().email(),name:z.string().min(1),borough:z.string().optional(),matchStyle:z.enum(['Strict','Open-Ended']),offers:z.array(z.string()).default([]),wants:z.array(z.string()).default([])});
export async function POST(req:Request){try{const data=Body.parse(await req.json());const user=await prisma.user.upsert({where:{email:data.email},update:{name:data.name,borough:data.borough,matchStyle:data.matchStyle},create:{email:data.email,name:data.name,borough:data.borough,matchStyle:data.matchStyle}});await prisma.offer.deleteMany({where:{userId:user.id}});await prisma.want.deleteMany({where:{userId:user.id}});await prisma.offer.createMany({data:data.offers.map(text=>({text,userId:user.id}))});await prisma.want.createMany({data:data.wants.map(text=>({text,userId:user.id}))});return NextResponse.json({ok:true,userId:user.id});}catch(e:any){return NextResponse.json({error:e.message},{status:400});}}
